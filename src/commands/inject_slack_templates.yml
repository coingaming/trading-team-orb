description: >
  Checks out slack templates and injects them into env vars

parameters:
  service_name:
    type: string
    default: ""
  tenant_id:
    type: string
    default: ""
steps:
  - run:
      name: "Injecting slack templates"
      when: always
      command: |
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        echo '-----BEGIN OPENSSH PRIVATE KEY-----' > ~/.ssh/id_rsa_1
        echo $GITHUB_DEPLOY_PRIVATE_KEY >> ~/.ssh/id_rsa_1
        echo '-----END OPENSSH PRIVATE KEY-----' >> ~/.ssh/id_rsa_1
        ssh-add -D
        chmod 600 ~/.ssh/id_rsa_1
        rm -rf trading-circleci-notifications
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_1" git clone git@github.com:coingaming/trading-circleci-notifications.git
        echo 'export DEPLOYMENT_SERVICE_NAME=<<parameters.service_name>>' >> $BASH_ENV
        echo 'export NUGET_SUCCESS_TEMPLATE=$(<trading-circleci-notifications/slack_templates/nuget_success.json)' >> $BASH_ENV
        echo 'export DEPLOY_SUCCESS_TEMPLATE=$(<trading-circleci-notifications/slack_templates/deploy_success.json)' >> $BASH_ENV
        echo 'export BUILD_FAILED_TEMPLATE=$(<trading-circleci-notifications/slack_templates/build_failed.json)' >> $BASH_ENV
        echo 'export DEPLOY_FAILED_TEMPLATE=$(<trading-circleci-notifications/slack_templates/deploy_failed.json)' >> $BASH_ENV
        echo 'export DOCKER_FAILED_TEMPLATE=$(<trading-circleci-notifications/slack_templates/docker_failed.json)' >> $BASH_ENV
        echo 'export WAITING_APPROVE_TEMPLATE=$(<trading-circleci-notifications/slack_templates/waiting_approve.json)' >> $BASH_ENV
        echo 'export COMMIT_MESSAGE=$(git log --format="%s" -n 1 $CIRCLE_SHA1)' >> $BASH_ENV
        export CIRCLE_USERNAME_ESCAPED=$CIRCLE_USERNAME
        export CIRCLE_USERNAME_ESCAPED=${CIRCLE_USERNAME_ESCAPED//"-"/"_"}
        export CIRCLE_USERNAME_ESCAPED=${CIRCLE_USERNAME_ESCAPED//" "/"_"}
        export SLACK_TAG=$(cat trading-circleci-notifications/users_map.json | jq -r .\"$CIRCLE_USERNAME_ESCAPED\")
        if [ "$SLACK_TAG" = "null" ]; then
          export SLACK_TAG="$CIRCLE_USERNAME"
        fi
        if [ "$SLACK_TAG" = "" ]; then
          export SLACK_TAG="$CIRCLE_USERNAME"
        fi
        echo "Circle CI user: $CIRCLE_USERNAME"
        echo "User name escaped: $CIRCLE_USERNAME_ESCAPED"
        echo "Detected user tag: $SLACK_TAG"
        export SET_SLACK_TAG_COMMAND="export SLACK_TAG='$SLACK_TAG'"
        echo $SET_SLACK_TAG_COMMAND >> $BASH_ENV
        export ENV_NAME="None"
        if [ "$CIRCLE_BRANCH" = "master" || << parameters.tenant_id >> != ""] || [[ "$CIRCLE_BRANCH" == *multi* ]]; then
          export ENV_NAME="DEV"
        fi
        if [ "$CIRCLE_BRANCH" = "staging" ]; then
          export ENV_NAME="STAGE"
        fi
        if [ "$CIRCLE_BRANCH" = "release" ]; then
          export ENV_NAME="PROD"
        fi
        export SET_ENV_NAME_COMMAND="export ENV_NAME='$ENV_NAME'"
        echo $SET_ENV_NAME_COMMAND >> $BASH_ENV
